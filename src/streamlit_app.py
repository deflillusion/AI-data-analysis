import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans

st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π", layout="wide")
st.title("–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª", type=["csv"])

if uploaded_file:
    df = pd.read_csv(uploaded_file)

    # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Streamlit (Arrow)
    df = df.convert_dtypes()

    for col in df.columns:
        try:
            if pd.api.types.is_integer_dtype(df[col]):
                df[col] = df[col].astype("float64")
            elif pd.api.types.is_bool_dtype(df[col]):
                df[col] = df[col].astype("bool")
            elif pd.api.types.is_numeric_dtype(df[col]):
                df[col] = pd.to_numeric(df[col], errors="coerce")
            elif pd.api.types.is_object_dtype(df[col]):
                df[col] = df[col].astype("string")
        except Exception:
            df[col] = df[col].astype("string")

    st.write("üìä –†–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö:", df.shape)

    st.subheader("üìå –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö")
    st.dataframe(df.head())

    st.subheader("üîç –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö")
    st.write(df.dtypes)

    st.subheader("üö´ –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è")
    st.write(df.isnull().sum())

    numeric_cols = df.select_dtypes(include="number").columns.tolist()
    if numeric_cols:
        st.subheader("üìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —á–∏—Å–ª–æ–≤—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")
        for col in numeric_cols:
            fig, ax = plt.subplots()
            sns.histplot(df[col].dropna(), kde=True, ax=ax)
            ax.set_title(f"–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {col}")
            st.pyplot(fig)

    if len(numeric_cols) > 1:
        st.subheader("üß† –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤")
        num_data = df[numeric_cols].dropna()
        kmeans = KMeans(n_clusters=3, random_state=42)
        clusters = kmeans.fit_predict(num_data)
        df['Cluster'] = -1
        df.loc[num_data.index, 'Cluster'] = clusters

        st.write("üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–∏")
        st.dataframe(df[['Cluster'] + numeric_cols].head())

        st.subheader("üó∫Ô∏è –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞—Å—Ç–µ—Ä–æ–≤")
        fig, ax = plt.subplots()
        sns.scatterplot(
            x=df[numeric_cols[0]],
            y=df[numeric_cols[1]],
            hue=df['Cluster'],
            palette="viridis",
            ax=ax
        )
        ax.set_title("–ö–ª–∞—Å—Ç–µ—Ä—ã –ø–æ –¥–≤—É–º –ø—Ä–∏–∑–Ω–∞–∫–∞–º")
        st.pyplot(fig)

else:
    st.info("‚¨ÜÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª –¥–ª—è –Ω–∞—á–∞–ª–∞ –∞–Ω–∞–ª–∏–∑–∞.")
